const {RichText, PlainText, InnerBlocks, InspectorControls, MediaUpload} = wp.editor;
const {registerBlockType} = wp.blocks;
const {Fragment} = wp.element;
const {SelectControl, Button, ToggleControl} = wp.components;
const {__} = wp.i18n;

try {
	var icon = require('./icon').default; //Icon is generated by bash script in the theme root. Use "bash convert-thumbnails-to-svg.bash"
} catch (ex) {
	var icon = 'editor-code';
}

const slideAttributes = {
	background: {
		attribute: 'style',
		selector: '.screen_section',
		default: imgSrc('bright/bg-bright.png')
	},

	infoVal :{
    type: 'string',
    selector: '.br-about__info-val',
    default: '9',
    source: 'html',
  },

  infoTxt :{
    type: 'string',
    selector: '.br-about__info-txt',
    default: 'out of',
    source: 'html',
  },

  infoTotal :{
    type: 'string',
    selector: '.br-about__info-right span',
    default: '10',
    source: 'html',
  },

  description :{
    type: 'string',
    source: 'html',
    selector: '.br-about__descr',
    default: 'users experienced <br>diffculty seeing in dim <br>light conditions<span style="font-size: 18px" class="artb-font-size"><sup class="artb-7703">*</sup></span>.'
  },

  imgUrl1: {
    attribute: 'src',
		selector: '.br-about__img img',
		default: imgSrc('bright/br-about.png')
  },

  cardTxt :{
    type: 'string',
    selector: '.br-about__card div',
    default: 'After the age of 20, our eyes become less sensitive to light. It becomes increasingly diffcult to read or conduct visually demanding activites in dim light.',
    source: 'html',
  },

  cardTitle :{
    type: 'string',
    selector: '.br-about__card span',
    default: 'We need more light than before to see clearly.',
    source: 'html',
  },

  footText :{
    type: 'string',
    selector: '.br-about__foot',
    default: '*Source : consumer online survey on 634 consumers in Canada, China & France, Jan to Feb 2018',
    source: 'html',
  },
};

registerBlockType('presentation/slide74', {
	title: __('Slide: #74', 'np'),
	icon: icon,
	category: 'nikon-catalog',
	attributes: slideAttributes,
	edit({className, attributes, setAttributes}) {

		const getImageButton = (openEvent, value) => {

			if (value)
				return (
					<img
						src={value}
						onClick={openEvent}
						className="image"
					/>
				);

			return (
				<div className="button-container">
					<Button
						onClick={openEvent}
						className="button button-large"
					>
						{__('Pick an image', 'np')}
					</Button>
				</div>
			);
    };

		return <div className={className + " block-presentation-slide all-empty"} style={{backgroundImage: `url(${attributes.background})`}}>

			{console.log(attributes)}


      <InspectorControls>
        <h3>{__('Pick background image', 'np')}:</h3>
        <MediaUpload
          onSelect={media => {
            setAttributes({background: media.url});
          }}
          type="image"
          value={attributes.imageID}
          render={({open}) => getImageButton(open, attributes.background)}
        />
      </InspectorControls>

      <div className="screen_body_wrapper start bottom bottom--mod no_relative">
        <div className="br-about">
          <div className="br-about__holder">
            <div className="br-about__left">
              <div className="br-about__info">
                <div className="br-about__info-left">
                  <span className="br-about__info-val">
                    <RichText
                      onChange={content => setAttributes({infoVal: content})}
                      value={attributes.infoVal}
                      placeholder={slideAttributes.infoVal.default.replace(/(<([^>]+)>)/ig,"")}
                    />
                  </span>
                  <span className="br-about__info-txt">
                    <RichText
                      onChange={content => setAttributes({infoTxt: content})}
                      value={attributes.infoTxt}
                      placeholder={slideAttributes.infoTxt.default.replace(/(<([^>]+)>)/ig,"")}
                    />
                  </span>
                </div>
                <div className="br-about__info-right">
                  <span>
                    <RichText
                      onChange={content => setAttributes({infoTotal: content})}
                      value={attributes.infoTotal}
                      placeholder={slideAttributes.infoTotal.default.replace(/(<([^>]+)>)/ig,"")}
                    />
                  </span>
                </div>
              </div>
              <div className="br-about__descr">
                <RichText
                  onChange={content => setAttributes({description: content})}
                  value={attributes.description}
                  placeholder={slideAttributes.description.default.replace(/(<([^>]+)>)/ig,"")}
                />
              </div>
            </div>
            <div className="br-about__right">
              <figure className="br-about__img">
                <MediaUpload
                  onSelect={media => setAttributes({imgUrl1: media.url})}
                  type="image"
                  value={attributes.imageID}
                  render={({open}) => getImageButton(open, attributes.imgUrl1)}
                />
              </figure>
              <div className="br-about__card">
                <div>
                  <RichText
                    onChange={content => setAttributes({cardTxt: content})}
                    value={attributes.cardTxt}
                    placeholder={slideAttributes.cardTxt.default.replace(/(<([^>]+)>)/ig,"")}
                  />
                </div>
                <span>
                  <RichText
                    onChange={content => setAttributes({cardTitle: content})}
                    value={attributes.cardTitle}
                    placeholder={slideAttributes.cardTitle.default.replace(/(<([^>]+)>)/ig,"")}
                  />
                </span>
              </div>
            </div>
            <div className="br-about__foot">
              <RichText
                onChange={content => setAttributes({footText: content})}
                value={attributes.footText}
                placeholder={slideAttributes.footText.default.replace(/(<([^>]+)>)/ig,"")}
              />
            </div>
          </div>
        </div>
      </div>
    </div>;
	},
	save({attributes}) {

		return <div className="screen_section screen_section--not-padding" data-section="#_SLIDE_NUMBER" style={{backgroundImage: `url(${attributes.background})`}}>

      <div className="screen_body_wrapper start bottom bottom--mod no_relative">
        <div className="br-about opacity_animate">
          <div className="br-about__holder">
            <div className="br-about__left">
              <div className="br-about__info">
                <div className="br-about__info-left">
                  <span className="br-about__info-val">
                    <RichText.Content value={attributes.infoVal}/>
                  </span>
                  <span className="br-about__info-txt">
                    <RichText.Content value={attributes.infoTxt}/>
                  </span>
                </div>
                <div className="br-about__info-right">
                  <span>
                    <RichText.Content value={attributes.infoTotal}/>
                  </span>
                </div>
              </div>
              <div className="br-about__descr">
                <RichText.Content value={attributes.description}/>
              </div>
            </div>
            <div className="br-about__right">
              <figure className="br-about__img">
                <img src={attributes.imgUrl1}/>
              </figure>
              <div className="br-about__card">
                <div>
                  <RichText.Content value={attributes.cardTxt}/>
                </div>
                <span>
                  <RichText.Content value={attributes.cardTitle}/>
                </span>
              </div>
            </div>
            <div className="br-about__foot">
              <RichText.Content value={attributes.footText}/>
            </div>
          </div>
        </div>
      </div>
		</div>;
	},
});
