const {RichText, PlainText, InnerBlocks, InspectorControls, MediaUpload} = wp.editor;
const {registerBlockType} = wp.blocks;
const {Fragment} = wp.element;
const {SelectControl, Button, ToggleControl} = wp.components;
const {__} = wp.i18n;

try {
	var icon = require('./icon').default; //Icon is generated by bash script in the theme root. Use "bash convert-thumbnails-to-svg.bash"
} catch (ex) {
	var icon = 'editor-code';
}

const slideAttributes = {
	background: {
		attribute: 'style',
		selector: '.screen_section',
		default: imgSrc('soltes/bg-soltes.png')
	},

	description: {
		type: 'string',
		source: 'html',
		selector: '.inf-know__descr p',
		default: 'How much time<br>do you spend<br>in front of your<br><span class="np-style-font-weight-extra-bold"><span class="np-style-stroke-accent-bold"><span style="font-size: 122px" class="artb-font-size">computer?</span></span></span>'
	},

	cardText: {
		type: 'string',
		source: 'html',
		selector: '.inf-know__card p',
		default: 'Do you experience<br>discomfort, back pain<br>or a stiff neck?'
	},

	items: {
		type: 'array',
		source: 'query',
		selector: '.inf-know__img',
		default: [
			{
				itemImage: imgSrc('soltes/sw-how-much-01.jpg'),
			},
			{
				itemImage: imgSrc('soltes/sw-how-much-02.jpg'),
			},
			{
				itemImage: imgSrc('soltes/sw-how-much-03.jpg'),
			},
			{
				itemImage: imgSrc('soltes/sw-how-much-04.jpg'),
			},
		],
		query: {
			itemImage: {
				type: 'string',
				source: 'attribute',
				attribute: 'src',
				selector: 'img',
			},
		},
	},
};

registerBlockType('presentation/slide83', {
	title: __('Slide: #83', 'np'),
	icon: icon,
	category: 'nikon-catalog',
	attributes: slideAttributes,
	edit({className, attributes, setAttributes}) {

		console.log(attributes);

		const getImageButton = (openEvent, value) => {

			if (value)
				return (
					<img
						src={value}
						onClick={openEvent}
						className="image"
					/>
				);

			return (
				<div className="button-container">
					<Button
						onClick={openEvent}
						className="button button-large"
					>
						{__('Pick an image', 'np')}
					</Button>
				</div>
			);
		};

		const item = (i) => {
			return <figure className="inf-know__img">
				<MediaUpload
					onSelect={media => {
						let items = attributes.items.slice();
						items[i].itemImage = media.url;
						setAttributes({items: items});
					}}
					type="image"
					value={attributes.imageID}
					render={({open}) => getImageButton(open, attributes.items[i].itemImage)}
				/>
			</figure>
		}


		return <div className={className + " block-presentation-slide all-empty"} style={{backgroundImage: `url(${attributes.background})`}}>

			<InspectorControls>
				<h3>{__('Pick background image', 'np')}:</h3>
				<MediaUpload
					onSelect={media => {
						setAttributes({background: media.url});
					}}
					type="image"
					value={attributes.imageID}
					render={({open}) => getImageButton(open, attributes.background)}
				/>
			</InspectorControls>

			<div className="screen_body_wrapper start bottom no_relative">
				<div className="inf-know inf-know--soltes">
					<div className="inf-know__wrap">
						<div className="inf-know__left">
							<div className="inf-know__descr">
								<p>
									<RichText
										onChange={content => setAttributes({description: content})}
										value={attributes.description}
										placeholder={slideAttributes.description.default}
									/>
								</p>
							</div>
						</div>
						<div className="inf-know__right">
							<div className="inf-know__grid">
								{attributes.items.map((el, i) => {
									return item(i);
								})}
								<div className="inf-know__card">
									<p>
										<RichText
											onChange={content => setAttributes({cardText: content})}
											value={attributes.cardText}
											placeholder={slideAttributes.cardText.default}
										/>
									</p>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>;
	},
	save({attributes}) {

		const item = (i) => {
			return <figure className="inf-know__img">
				<img src={attributes.items[i].itemImage}/>
			</figure>
		}

		return <div className="screen_section screen_section--not-padding" data-section="#_SLIDE_NUMBER"
					style={{backgroundImage: `url(${attributes.background})`}}>

			<div className="screen_body_wrapper start bottom no_relative">
				<div className="inf-know inf-know--soltes opacity_animate">
					<div className="inf-know__wrap">
						<div className="inf-know__left">
							<div className="inf-know__descr">
								<p>
									<RichText.Content value={attributes.description}/>
								</p>
							</div>
						</div>
						<div className="inf-know__right">
							<div className="inf-know__grid">
								{attributes.items.map((el, i) => {
									return item(i);
								})}
								<div className="inf-know__card">
									<p>
										<RichText.Content value={attributes.cardText}/>
									</p>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>;
	},
});
