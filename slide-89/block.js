import BrandWrapper from  '../../../subcomponents/brand-wrapper';
const {RichText, PlainText, InnerBlocks, InspectorControls, MediaUpload} = wp.editor;
const {registerBlockType} = wp.blocks;
const {Fragment} = wp.element;
const {SelectControl, Button, ToggleControl} = wp.components;
const {__} = wp.i18n;

try {
	var icon = require('./icon').default; //Icon is generated by bash script in the theme root. Use "bash convert-thumbnails-to-svg.bash"
} catch (ex) {
	var icon = 'editor-code';
}

const slideAttributes = {
	background: {
		attribute: 'style',
		selector: '.screen_section',
		default: imgSrc('relaxsee/bg-relaxsee.png')
	},

	title :{
    type: 'string',
    selector: '.rs-accomodation__title',
    default: 'ACCOMODATION SUPPORT DESIGN<br>THAT RELIEVES EYE STRAIN',
    source: 'html',
  },

  itemName1 :{
    type: 'string',
    selector: '.rs-accomodation__board-name.top',
    default: 'Clear zone',
    source: 'html',
  },

  itemName2 :{
    type: 'string',
    selector: '.rs-accomodation__board-name.bottom',
    default: 'Relax zone',
    source: 'html',
  },

  boardDescr :{
    type: 'string',
    selector: '.rs-accomodation__board-descr',
    default: 'RELAXSEE NEO ENSURES TO DELIVER BOTH SHARP VISION',
    source: 'html',
  },

  boardTitle :{
    type: 'string',
    selector: '.rs-accomodation__board-title',
    default: 'FOR FAR AND RELAXING VISION AT NEAR.',
    source: 'html',
  },
};

registerBlockType('presentation/slide89', {
	title: __('Slide: #89', 'np'),
	icon: icon,
	category: 'nikon-catalog',
	attributes: slideAttributes,
	edit({className, attributes, setAttributes}) {

		const getImageButton = (openEvent, value) => {

			if (value)
				return (
					<img
						src={value}
						onClick={openEvent}
						className="image"
					/>
				);

			return (
				<div className="button-container">
					<Button
						onClick={openEvent}
						className="button button-large"
					>
						{__('Pick an image', 'np')}
					</Button>
				</div>
			);
    };

		return <div className={className + " block-presentation-slide all-empty"} style={{backgroundImage: `url(${attributes.background})`}}>

      <InspectorControls>
        <h3>{__('Pick background image', 'np')}:</h3>
        <MediaUpload
          onSelect={media => {
            setAttributes({background: media.url});
          }}
          type="image"
          value={attributes.imageID}
          render={({open}) => getImageButton(open, attributes.background)}
        />
      </InspectorControls>

      <div className="screen_body_wrapper start bottom bottom--mod no_relative">
        <div className="rs-accomodation">
          <span className="rs-accomodation__title">
            <RichText
              onChange={content => setAttributes({title: content})}
              value={attributes.title}
            />
          </span>
          <div className="rs-accomodation__board">
            <div className="rs-accomodation__board-inner">
              <figure className="rs-accomodation__board-img">
                <img src={imgSrc("relaxsee/rs-accomodation.png")} alt="img"/>
              </figure>
              <span className="rs-accomodation__board-name top">
                <RichText
                  onChange={content => setAttributes({itemName1: content})}
                  value={attributes.itemName1}
                />
              </span>
              <span className="rs-accomodation__board-name bottom">
                <RichText
                  onChange={content => setAttributes({itemName2: content})}
                  value={attributes.itemName2}
                />
              </span>
            </div>
            <div className="rs-accomodation__board-bottom">
              <div className="rs-accomodation__board-text">
                <span className="rs-accomodation__board-descr">
                  <RichText
                    onChange={content => setAttributes({boardDescr: content})}
                    value={attributes.boardDescr}
                  />
                </span>
                <span className="rs-accomodation__board-title">
                  <RichText
                    onChange={content => setAttributes({boardTitle: content})}
                    value={attributes.boardTitle}
                  />
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>;
	},
	save({attributes}) {

		return <div className="screen_section screen_section--not-padding" data-section="#_SLIDE_NUMBER" style={{backgroundImage: `url(${attributes.background})`}}>

      <div className="screen_body_wrapper start bottom bottom--mod no_relative">
        <div className="rs-accomodation opacity_animate">
          <span className="rs-accomodation__title">
            <RichText.Content value={attributes.title}/>
          </span>
          <div className="rs-accomodation__board">
            <div className="rs-accomodation__board-inner">
              <figure className="rs-accomodation__board-img">
                <img src={imgSrc("relaxsee/rs-accomodation.png")} alt="img"/>
              </figure>
              <span className="rs-accomodation__board-name top">
                <RichText.Content value={attributes.itemName1}/>
              </span>
              <span className="rs-accomodation__board-name bottom">
                <RichText.Content value={attributes.itemName2}/>
              </span>
            </div>
            <div className="rs-accomodation__board-bottom">
              <div className="rs-accomodation__board-text">
                <span className="rs-accomodation__board-descr">
                  <RichText.Content value={attributes.boardDescr}/>
                </span>
                <span className="rs-accomodation__board-title">
                  <RichText.Content value={attributes.boardTitle}/>
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
		</div>;
	},
});
