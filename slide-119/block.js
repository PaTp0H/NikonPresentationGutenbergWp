const {RichText, PlainText, InnerBlocks, InspectorControls, MediaUpload} = wp.editor;
const {registerBlockType} = wp.blocks;
const {Fragment} = wp.element;
const {SelectControl, Button, Modal, ToggleControl} = wp.components;
const {withState} = wp.compose;
const {__} = wp.i18n;


const slideAttributes = {
	background: {
		attribute: 'style',
		selector: '.screen_section',
		default: imgSrc('transitions/signature-image.png')
	},
	logo: {
		source: 'attribute',
		attribute: 'src',
		selector: '.tr-title-screen__logo img',
		default: imgSrc('transitions/tr-logo-02.png')
	},
	topText: {
		type: 'string',
		selector: '.tr-signature__head-descr',
		source: 'html',
		default: 'Featuring exclusive <span class="np-style-font-weight-extra-bold"><em><span style="font-size: 30px" class="artb-font-size">Chromea7</span></em></span> <sup class="artb-7703"><span class="np-style-font-weight-extra-light"><em><span style="font-size: 9px" class="artb-font-size">TM</span></em></span></sup> technology,<br>this is our fastest and most responsive lens<br>in all lighting and temperature conditions.<br><strong>Personalize your style with a choice of <span style="font-size: 65px" class="artb-font-size">3</span> <span class="np-style-custom-underline">colors.</span></strong>',
	},
	leftMiddleText: {
		type: 'string',
		selector: '.tr-signature__middle-left',
		source: 'html',
		default: '<span style="font-size: 47px" class="artb-font-size">Extra responsive</span><br><span style="font-size: 47px" class="artb-font-size">to darken outdoors</span><br><span style="font-size: 35px" class="artb-font-size"><span class="np-style-font-weight-extra-light">lighting and temperature<br>conditions</span></span>',
	},
	rightMiddleText: {
		type: 'string',
		selector: '.tr-signature__middle-box:not(.mod)',
		source: 'html',
		default: '<span style="color: #002a6c" class="artb-font-color"><span style="font-size: 47px" class="artb-font-size">Extra fast fade</span><br><span style="font-size: 47px" class="artb-font-size">back</span><br></span><span style="font-size: 35px" class="artb-font-size"><span class="np-style-font-weight-extra-light"><span style="color: #002a6c" class="artb-font-color">from dark outside<br>to clear indoors</span></span></span>',
	},
	rightMiddleTextBottom: {
		type: 'string',
		selector: '.tr-signature__middle-box.mod',
		source: 'html',
		default: '<span style="color: #002a6c" class="artb-font-color"><span style="font-size: 44px" class="artb-font-size">Outdoors <span class="np-style-font-weight-extra-light">// Dark</span></span></span><br><span style="font-size: 44px" class="artb-font-size"><span style="color: #002a6c" class="artb-font-color">Indoors <span class="np-style-font-weight-extra-light">// Clear</span></span></span>',
	},
	items: {
		type: 'array',
		selector: '.tr-signature__bottom-col',
		source: 'query',
		default: [
			{
				icon: imgSrc('transitions/tr-signature-icon-01.png'),
				label: 'Grey',
			},
			{
				icon: imgSrc('transitions/tr-signature-icon-02.png'),
				label: 'Brown',
			},
			{
				icon: imgSrc('transitions/tr-signature-icon-03.png'),
				label: 'Graphite Green',
			},
		],
		query: {
			icon: {
				source: 'attribute',
				attribute: 'src',
				selector: '.tr-signature__bottom-icon img',
			},
			label: {
				type: 'string',
				selector: '.tr-signature__bottom-name',
				source: 'html',
			},
		}
	},
};


try {
	var icon = require('./icon').default; //Icon is generated by bash script in the theme root. Use "bash convert-thumbnails-to-svg.bash"
} catch (ex) {
	var icon = 'editor-code';
}

registerBlockType('presentation/slide119', {
	title: __('Slide: 119', 'np'),
	icon: icon,
	category: 'nikon-catalog',
	attributes: slideAttributes,
	edit: withState({
		activeTab: 0,
	})
	(({activeTab, setState, className, attributes, setAttributes}) => {


		const getImageButton = (openEvent, value) => {

			if (value)
				return (
					<img
						src={value}
						onClick={openEvent}
						className="image"
					/>
				);

			return (
				<div className="button-container">
					<Button
						onClick={openEvent}
						className="button button-large"
					>
						{__('Pick an image', 'np')}
					</Button>
				</div>
			);
		};


		return <div className={className + " block-presentation-slide all-empty"}
					style={{backgroundImage: `url(${attributes.background})`}}>

			{console.log(attributes)}

			<InspectorControls>
				<h3>{__('Pick background image', 'np')}:</h3>
				<MediaUpload
					onSelect={media => {
						setAttributes({background: media.url});
					}}
					type="image"
					value={attributes.imageID}
					render={({open}) => getImageButton(open, attributes.background)}
				/>
			</InspectorControls>

			<div className="screen_body_wrapper start bottom bottom--mod no_relative">
				<div className="tr-signature opacity_animate"
					 style={{backgroundImage: `url(${imgSrc('transitions/signature-background.png')})`}}
				>
					<div className="tr-signature__head">
						<div className="tr-signature__head-left">
							<span className="tr-signature__head-descr">
								<RichText
									onChange={content => {
										setAttributes({topText: content});
									}}
									value={attributes.topText}
								/>
							</span>
						</div>
						<div className="tr-signature__head-right">
							<figure className="tr-signature__head-logo">
								<MediaUpload
									onSelect={media => {
										setAttributes({logo: media.url});
									}}
									type="image"
									value={attributes.imageID}
									render={({open}) => getImageButton(open, attributes.logo)}
								/>
							</figure>
						</div>
					</div>
					<div className="tr-signature__middle">
						<figure className="tr-signature__line">
							<img src={imgSrc('transitions/tr-signature-line.svg')} alt="decor"/>
						</figure>
						<div className="tr-signature__middle-left">
							<RichText
								onChange={content => {
									setAttributes({leftMiddleText: content});
								}}
								value={attributes.leftMiddleText}
							/>
						</div>
						<div className="tr-signature__middle-right">
							<div className="tr-signature__middle-box">
								<RichText
									onChange={content => {
										setAttributes({rightMiddleText: content});
									}}
									value={attributes.rightMiddleText}
								/>
							</div>
							<div className="tr-signature__middle-box mod">
								<RichText
									onChange={content => {
										setAttributes({rightMiddleTextBottom: content});
									}}
									value={attributes.rightMiddleTextBottom}
								/>
							</div>
						</div>
					</div>
					<div className="tr-signature__bottom">
						<div className="tr-signature__bottom-row">

							{attributes.items.map((item, i) => {
								return <div className="tr-signature__bottom-col">
									<figure className="tr-signature__bottom-icon">
										<MediaUpload
											onSelect={media => {
												let items = attributes.items.slice();
												items[i].icon = media.url;
												setAttributes({items: items});
											}}
											type="image"
											value={attributes.imageID}
											render={({open}) => getImageButton(open, attributes.items[i].icon)}
										/>
									</figure>
									<span className="tr-signature__bottom-name">
										<RichText
											onChange={content => {
												let items = attributes.items.slice();
												items[i].label = content;
												setAttributes({items: items});
											}}
											value={attributes.items[i].label}
										/>
									</span>
								</div>;
							})}

						</div>
					</div>
				</div>
			</div>

		</div>
			;
	}),
	save: ({attributes}) => {


		return <div className="screen_section screen_section--not-padding no-logo" data-section="#_SLIDE_NUMBER"
					style={{backgroundImage: `url(${attributes.background})`}}>

			<div className="screen_body_wrapper start bottom bottom--mod no_relative">
				<div className="tr-signature opacity_animate"
					 style={{backgroundImage: `url(${imgSrc('transitions/signature-background.png')})`}}
				>
					<div className="tr-signature__head">
						<div className="tr-signature__head-left">
							<span className="tr-signature__head-descr">
								<RichText.Content value={attributes.topText}/>
							</span>
						</div>
						<div className="tr-signature__head-right">
							<figure className="tr-signature__head-logo">
								<img src={attributes.logo} alt=""/>
							</figure>
						</div>
					</div>
					<div className="tr-signature__middle">
						<figure className="tr-signature__line">
							<img src={imgSrc('transitions/tr-signature-line.svg')} alt="decor"/>
						</figure>
						<div className="tr-signature__middle-left">
							<RichText.Content value={attributes.leftMiddleText}/>
						</div>
						<div className="tr-signature__middle-right">
							<div className="tr-signature__middle-box">
								<RichText.Content value={attributes.rightMiddleText}/>
							</div>
							<div className="tr-signature__middle-box mod">
								<RichText.Content value={attributes.rightMiddleTextBottom}/>
							</div>
						</div>
					</div>
					<div className="tr-signature__bottom">
						<div className="tr-signature__bottom-row">

							{attributes.items.map((item, i) => {
								return <div className="tr-signature__bottom-col">

									{attributes.items[i].icon &&
									<figure className="tr-signature__bottom-icon">
										<img src={attributes.items[i].icon} alt=""/>
									</figure>
									}
									<span className="tr-signature__bottom-name">
										<RichText.Content value={attributes.items[i].label}/>
									</span>
								</div>;
							})}

						</div>
					</div>
				</div>
			</div>

		</div>
			;
	},
});
